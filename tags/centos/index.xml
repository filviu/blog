<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>centos on Silviu's Blog</title><link>https://silviuvulcan.ro/blog/tags/centos/</link><description>Recent content in centos on Silviu's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 30 Sep 2013 06:51:14 +0000</lastBuildDate><atom:link href="https://silviuvulcan.ro/blog/tags/centos/index.xml" rel="self" type="application/rss+xml"/><item><title>CentOS 6.x misses nobootwait fstab option.</title><link>https://silviuvulcan.ro/blog/2013/09/30/centos-6-x-misses-nobootwait-fstab-option/</link><pubDate>Mon, 30 Sep 2013 06:51:14 +0000</pubDate><guid>https://silviuvulcan.ro/blog/2013/09/30/centos-6-x-misses-nobootwait-fstab-option/</guid><description>Recently I added a new storage disk to a cloud server. The issue is that this disk might not always be available at boot time. There is an easy fix for this kind of problems. The nobootwait mount option (like it would show in a fstab entry):
/dev/xvdd1 /storage ext4 defaults,nobootwait 0 0 Note that the fsck order of 0 already ensures that fsck will not hold the boot process by complaining the disk is missing.</description></item><item><title>Regenerate SSH keys</title><link>https://silviuvulcan.ro/blog/2013/06/14/regenerate-ssh-keys/</link><pubDate>Fri, 14 Jun 2013 12:04:43 +0000</pubDate><guid>https://silviuvulcan.ro/blog/2013/06/14/regenerate-ssh-keys/</guid><description>I&amp;rsquo;m a big fan of virtualization. I find it very useful both on my workstation as for the servers. What this means is that I often clone virtual machines to repurpose, run tests or simply add web capacity for load balanced sites. One of the steps is that you have to regenerate the ssh keys (besides the usual suspects that are changing IP, hostname and so on) so you don&amp;rsquo;t have multiple hosts with the same ssh keys.</description></item><item><title>Tentakel on CentOS 6 / Python 2.6</title><link>https://silviuvulcan.ro/blog/2012/09/11/tentakel-on-centos-6-python-2-6/</link><pubDate>Tue, 11 Sep 2012 10:25:41 +0000</pubDate><guid>https://silviuvulcan.ro/blog/2012/09/11/tentakel-on-centos-6-python-2-6/</guid><description>Update: As useful as tentakel was in my young sysadmin days it was always dangerous (one wrong command or quote character away from disaster), non-reproducible, needing constant documentation on changes done. I really don&amp;rsquo;t know if tentakel even exist anymore but if it does I strongly suggest you consider ansible instead.
You probably already know this old, unmaintained but incredibly useful software:Â tentakel. If not check it out, you might like it.</description></item><item><title>Log dropped packets using CentOS Firewall</title><link>https://silviuvulcan.ro/blog/2012/01/23/log-dropped-packets-using-centos-firewall/</link><pubDate>Mon, 23 Jan 2012 07:16:42 +0000</pubDate><guid>https://silviuvulcan.ro/blog/2012/01/23/log-dropped-packets-using-centos-firewall/</guid><description>Please take care modifying your firewall. If you don&amp;rsquo;t understand what&amp;rsquo;s being done here you may lock yourself out of your machine. You&amp;rsquo;ve been warned ðŸ™‚ !
In order to log dropped packets on the INPUT chain I replaced this:
-A INPUT -i eth0 -j REJECT -reject-with icmp-host-prohibited with this
-N LOGDROP -A LOGDROP -i eth0 -j LOG -A LOGDROP -i eth0 -j REJECT -reject-with icmp-host-prohibited -A INPUT -i eth0 -j LOGDROP Of course you can use DROP instead of REJECT -reject-with icmp-host-prohibited</description></item><item><title>Add php APC and UploadProgress support to CentOS</title><link>https://silviuvulcan.ro/blog/2011/08/03/add-php-apc-and-uploadprogress-support-to-centos/</link><pubDate>Wed, 03 Aug 2011 08:25:40 +0000</pubDate><guid>https://silviuvulcan.ro/blog/2011/08/03/add-php-apc-and-uploadprogress-support-to-centos/</guid><description>I was playing today with some file uploading scripts and noticed that they require one of the two in order to be able to display a progress bar.
Those are the steps required to enabled both of them on centos:
yum install php-pear php-devel httpd-devel pcre-devel pecl install apc pecl install uploadprogress Than I created in /etc/php.d/ the following files:
; provides upload progress, installed using pecl extension=apc.so apc.rfc1867=1 and</description></item><item><title>uuencode and uudecode are missing from CentOS 5</title><link>https://silviuvulcan.ro/blog/2010/10/27/uuencode-and-uudecode-are-missing-from-centos-5/</link><pubDate>Wed, 27 Oct 2010 10:10:52 +0000</pubDate><guid>https://silviuvulcan.ro/blog/2010/10/27/uuencode-and-uudecode-are-missing-from-centos-5/</guid><description>What a surprise. I need those sometimes when mailing things from cron so after a quick search around I found the (intuitive named) package that contains those utilities is sharutils.
yum install sharutils Loaded plugins: fastestmirror Loading mirror speeds from cached hostfile Excluding Packages in global exclude list Finished Setting up Install Process Resolving Dependencies -&amp;gt; Running transaction check -&amp;gt; Package sharutils.x86_64 0:4.6.1-2 set to be updated -&amp;gt; Finished Dependency Resolution Dependencies Resolved ======================================================================================================================================== Package Arch Version Repository Size ======================================================================================================================================== Installing: sharutils x86_64 4.</description></item></channel></rss>