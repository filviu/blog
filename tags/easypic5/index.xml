<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>easypic5 on Silviu's Blog</title><link>https://silviuvulcan.ro/blog/tags/easypic5/</link><description>Recent content in easypic5 on Silviu's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 01 Dec 2009 15:23:50 +0000</lastBuildDate><atom:link href="https://silviuvulcan.ro/blog/tags/easypic5/index.xml" rel="self" type="application/rss+xml"/><item><title>KS0108 Graphics Library for PIC16F microcontrollers</title><link>https://silviuvulcan.ro/blog/2009/12/01/ks0108-graphics-library-for-pic16f-microcontrollers/</link><pubDate>Tue, 01 Dec 2009 15:23:50 +0000</pubDate><guid>https://silviuvulcan.ro/blog/2009/12/01/ks0108-graphics-library-for-pic16f-microcontrollers/</guid><description>Not that I&amp;rsquo;m not happy with the default mikroC library for the KS0108 graphic displays, as I always I wanted something with the source available. Considering that I&amp;rsquo;m a beginner with microcontrolers having the source available to hack around is a very valuable learning tool.
The project is based on the source found here:
http://en.radzio.dxp.pl/ks0108/
The source is made pretty universal, still it took some work and modifications to have it working in mikroC.</description></item><item><title>Open source ADC read function</title><link>https://silviuvulcan.ro/blog/2009/07/14/open-source-adc-read-function/</link><pubDate>Tue, 14 Jul 2009 16:30:43 +0000</pubDate><guid>https://silviuvulcan.ro/blog/2009/07/14/open-source-adc-read-function/</guid><description>Yes, I know, mikroC has it&amp;rsquo;s own ADC library, but as always I am a sucker for open source. So I decided to write my own adc read function, so I can better understand the PIC ADC converter operation. And, in the good spirit of open source I decided to share my code. The following code is the ADC on LCD example supplied by MikroElectronika with their EasyPic5 board, and it&amp;rsquo;s written in MikroC Pro.</description></item></channel></rss>