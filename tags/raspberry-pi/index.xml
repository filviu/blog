<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>raspberry pi on Silviu's Blog</title><link>http://silviuvulcan.ro/blog/tags/raspberry-pi/</link><description>Recent content in raspberry pi on Silviu's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 27 Jan 2015 10:30:49 +0000</lastBuildDate><atom:link href="http://silviuvulcan.ro/blog/tags/raspberry-pi/index.xml" rel="self" type="application/rss+xml"/><item><title>Raspberry Pi A+ Nixie NTP Clock</title><link>http://silviuvulcan.ro/blog/2015/01/27/raspberry-pi-a-nixie-ntp-clock/</link><pubDate>Tue, 27 Jan 2015 10:30:49 +0000</pubDate><guid>http://silviuvulcan.ro/blog/2015/01/27/raspberry-pi-a-nixie-ntp-clock/</guid><description>Who doesn&amp;rsquo;t like a Nixie tube based clock. Even my wife loved it. Bonus points if it&amp;rsquo;s very accurate.
I had in my parts box, for a very long time now, the display PCB from an old PH-meter. Old enough that it was done using Rusian 74141 clones - K155ID1 nixie drivers - a lot of logic chips (decade counters, serial latches, etc) and nixie tubes. It was also wired in a way that defied logic.</description></item><item><title>Build a Smart Scanner using a PI</title><link>http://silviuvulcan.ro/blog/2015/01/26/build-a-smart-scanner-using-a-pi/</link><pubDate>Mon, 26 Jan 2015 21:44:09 +0000</pubDate><guid>http://silviuvulcan.ro/blog/2015/01/26/build-a-smart-scanner-using-a-pi/</guid><description>I got a free all-in-one printer from a friend who didn&amp;rsquo;t need it (consumed way too much ink cartridges). Since I liked the idea of the ScanSnap Evernote scanner but not so much the 500$ sticker price I decided to build one using this all in one and a Raspberry PI.
Fortunately the model I received is supported by SANE.
I needed the following pieces put together:
Interface (a few buttons to take color/grayscale lowres/high res photos) A command line utility to upload scanned pages to the cloud A daemon to monitor and trigger everything.</description></item><item><title>A simple retweet bot using a collocated Raspberry PI</title><link>http://silviuvulcan.ro/blog/2013/09/13/a-simple-retweet-bot-using-a-collocated-raspberry-pi/</link><pubDate>Fri, 13 Sep 2013 08:57:10 +0000</pubDate><guid>http://silviuvulcan.ro/blog/2013/09/13/a-simple-retweet-bot-using-a-collocated-raspberry-pi/</guid><description>2023 Update With the number of changes since Twitter is under new ownership I&amp;rsquo;m not sure this can still work.
I have a Raspberry PI freely collocated by the nice people at pcextreme. Being a Jolla fan I found a new use for it. I made a Retweet bot that retweets everything #Jolla.
It&amp;rsquo;s pretty simple. First you need to define your new twitter app here. Install on your raspberry the tweepy twitter python library.</description></item><item><title>Streaming video with a Raspberry PI and a Logitech C270</title><link>http://silviuvulcan.ro/blog/2013/06/18/streaming-video-with-a-raspberry-pi-and-a-logitech-c270/</link><pubDate>Tue, 18 Jun 2013 18:31:57 +0000</pubDate><guid>http://silviuvulcan.ro/blog/2013/06/18/streaming-video-with-a-raspberry-pi-and-a-logitech-c270/</guid><description>Hi,
I wanted to setup a live webcam using a Raspberry Pi (model B, first rev. with 256M RAM) so after checking and happily finding out that my camera is suported I went along. First I installed the support packages:
sudo apt-get install gstreamer-tools gstreamer0.10-plugins-bad gstreamer0.10-plugins-good v4l-utils After that I wrote a small script that would start the stream:
#!/bin/bash # set below your Raspberry PI IP address myip=&amp;#34;192.168.xxx.xxx&amp;#34; port=&amp;#34;5000&amp;#34; gst-launch -v v4l2src !</description></item></channel></rss>