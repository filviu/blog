<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>make on Silviu's Blog</title><link>http://silviuvulcan.ro/blog/tags/make/</link><description>Recent content in make on Silviu's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 13 Jun 2012 19:44:01 +0000</lastBuildDate><atom:link href="http://silviuvulcan.ro/blog/tags/make/index.xml" rel="self" type="application/rss+xml"/><item><title>digikam 2.6.0 won’t start due to missing libavcodec.so.53 (slackware current64)</title><link>http://silviuvulcan.ro/blog/2012/06/13/digikam-2-6-0-wont-start-due-to-missing-libavcodec-so-53-slackware-current64/</link><pubDate>Wed, 13 Jun 2012 19:44:01 +0000</pubDate><guid>http://silviuvulcan.ro/blog/2012/06/13/digikam-2-6-0-wont-start-due-to-missing-libavcodec-so-53-slackware-current64/</guid><description>This was pretty simple but complicated :). It turns out I updated alien bob&amp;rsquo;s repo to ffmpeg 0.11, thus upgrading to libavcodec.so.54. I&amp;rsquo;m sure I could have gotten away with a simple symlink but I wanted a clean install.
So I though I would simply rebuild digikam, right? Wrong. It failed, with weird errors like:
make[2]: \*** [extra/libkface/test/detect] Error 1 or
collect2: error: ld returned 1 exit status make[2]: *** [extra/kipi-plugins/removeredeyes/test/testipp] Error 1 Face detect above sounded a lot like digikam built successfully.</description></item><item><title>libgdiplus-2.10.9 build fails on slacware current64 (2012-06)</title><link>http://silviuvulcan.ro/blog/2012/06/13/libgdiplus-2-10-9-build-fails-on-slacware-current64-2012-06/</link><pubDate>Wed, 13 Jun 2012 06:01:08 +0000</pubDate><guid>http://silviuvulcan.ro/blog/2012/06/13/libgdiplus-2-10-9-build-fails-on-slacware-current64-2012-06/</guid><description>Installing mono I needed to install libgdiplus. It failed with the following error:
/usr/lib64/gcc/x86_64-slackware-linux/4.7.0/../../../../x86_64-slackware-linux/bin/ld: testgdi.o: undefined reference to symbol &amp;#39;g_free&amp;#39; /usr/lib64/gcc/x86_64-slackware-linux/4.7.0/../../../../x86_64-slackware-linux/bin/ld: note: &amp;#39;g_free&amp;#39; is defined in DSO /usr/lib64/libglib-2.0.so.0 so try adding it to the linker command line /usr/lib64/libglib-2.0.so.0: could not read symbols: Invalid operation collect2: error: ld returned 1 exit status make[2]: *** [testgdi] Error 1 make[2]: Leaving directory `/usr/local/src/libgdiplus-2.10.9/tests&amp;#39; make[1]: *** [all-recursive] Error 1 make[1]: Leaving directory `/usr/local/src/libgdiplus-2.10.9&amp;#39; make: *** [all] Error 2 The fix is simple, thanks to a mention in slacky pkg reports:</description></item><item><title>Compiling audacious 3.1</title><link>http://silviuvulcan.ro/blog/2011/11/22/compiling-audacious-3-1/</link><pubDate>Tue, 22 Nov 2011 09:18:26 +0000</pubDate><guid>http://silviuvulcan.ro/blog/2011/11/22/compiling-audacious-3-1/</guid><description>I&amp;rsquo;m a big fan of classic media players (audacious, xmms, the old winamp, etc.) That&amp;rsquo;s why I wanted today to complile the latest version of audacious (3.1) for my slackware laptop. Since the audacious build scripts are kind enough to provide make uninstall I didn&amp;rsquo;t bother with package builds, I simply compiled the stock source.
BTW that required upgrading libmowgli (got one from slacky). Audacious compiled succesfully but for audacious-plugins configure refused to run:</description></item></channel></rss>