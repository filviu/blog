<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>pic on Silviu's Blog</title><link>http://silviuvulcan.ro/blog/tags/pic/</link><description>Recent content in pic on Silviu's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 01 Dec 2009 15:23:50 +0000</lastBuildDate><atom:link href="http://silviuvulcan.ro/blog/tags/pic/index.xml" rel="self" type="application/rss+xml"/><item><title>KS0108 Graphics Library for PIC16F microcontrollers</title><link>http://silviuvulcan.ro/blog/2009/12/01/ks0108-graphics-library-for-pic16f-microcontrollers/</link><pubDate>Tue, 01 Dec 2009 15:23:50 +0000</pubDate><guid>http://silviuvulcan.ro/blog/2009/12/01/ks0108-graphics-library-for-pic16f-microcontrollers/</guid><description>Not that I&amp;rsquo;m not happy with the default mikroC library for the KS0108 graphic displays, as I always I wanted something with the source available. Considering that I&amp;rsquo;m a beginner with microcontrolers having the source available to hack around is a very valuable learning tool.
The project is based on the source found here:
http://en.radzio.dxp.pl/ks0108/
The source is made pretty universal, still it took some work and modifications to have it working in mikroC.</description></item><item><title>Open source ADC read function</title><link>http://silviuvulcan.ro/blog/2009/07/14/open-source-adc-read-function/</link><pubDate>Tue, 14 Jul 2009 16:30:43 +0000</pubDate><guid>http://silviuvulcan.ro/blog/2009/07/14/open-source-adc-read-function/</guid><description>Yes, I know, mikroC has it&amp;rsquo;s own ADC library, but as always I am a sucker for open source. So I decided to write my own adc read function, so I can better understand the PIC ADC converter operation. And, in the good spirit of open source I decided to share my code. The following code is the ADC on LCD example supplied by MikroElectronika with their EasyPic5 board, and it&amp;rsquo;s written in MikroC Pro.</description></item><item><title>A free book about PIC Microcontrollers</title><link>http://silviuvulcan.ro/blog/2009/07/06/a-free-book-about-pic-microcontrollers/</link><pubDate>Mon, 06 Jul 2009 11:22:59 +0000</pubDate><guid>http://silviuvulcan.ro/blog/2009/07/06/a-free-book-about-pic-microcontrollers/</guid><description>As you might have noticed from my posts I am always in for a free lunch.
So, this would be free lunch for your brain. Even if you don&amp;rsquo;t use or plan to use Mikroelektronika products you might want to know that they have a free book about PIC microcontrolers on their website: here.
It&amp;rsquo;s not tied up to any of their development systems but it does focus on the PIC16F887, and even if the English used is not the best possible it still gets the job done.</description></item><item><title>Temperature graph on GLCD with EasyPic5</title><link>http://silviuvulcan.ro/blog/2009/06/18/temperature-graph-on-glcd-with-easypic5/</link><pubDate>Thu, 18 Jun 2009 17:17:46 +0000</pubDate><guid>http://silviuvulcan.ro/blog/2009/06/18/temperature-graph-on-glcd-with-easypic5/</guid><description>This is a small project I did for school. I am using the easypic 5 board from mikroelectronica to display a linegraph of the temperature read every second by the DS1820 sensor and displays it on the KS0108 based GLCD. I am using the OneWire and GLCD libraries that come with the mikroC compiler.
I am using a PIC16F887 mounted on the board. You might need to adjust the code if you use a different microcontroler / development board.</description></item><item><title>4Ã—20 LCD screen with USB interface.</title><link>http://silviuvulcan.ro/blog/2009/05/31/4x20-lcd-screen-with-usb-interface/</link><pubDate>Sun, 31 May 2009 15:50:54 +0000</pubDate><guid>http://silviuvulcan.ro/blog/2009/05/31/4x20-lcd-screen-with-usb-interface/</guid><description>Attaching an LCD screen to a pc is a pretty easy job. I am working on a jukebox that I wanted to a screen attached to. Although a HD44780 based LCD can be attached to the parallel port with almost no additional parts I wanted a more flexible solution, and I thought about microcontrollers with usb support. I found a thread here, where all the work is pretty much done. Thank you ch424.</description></item></channel></rss>